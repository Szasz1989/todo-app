# Docker Compose Configuration for Full-Stack Todo App

version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    container_name: todo-mongodb
    restart: unless-stopped
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: todo_app
    
    ports:
      - "27017:27017"
    
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    
    networks:
      - todo-network

  # Express Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    
    container_name: todo-server
    restart: unless-stopped
    
    # Wait for MongoDB to be healthy before starting
    depends_on:
      mongodb:
        condition: service_healthy
    
    environment:
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017
      MONGODB_DB_NAME: todo_app
      CLIENT_URL: http://localhost:5173
      NODE_ENV: development
    
    ports:
      - "5000:5000"
    
    # Mount source code for development (hot reload)
    volumes:
      - ./server/src:/app/src
      - ./server/package.json:/app/package.json
    
    networks:
      - todo-network

  # React Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    
    container_name: todo-client
    restart: unless-stopped
    
    # Wait for server to start
    depends_on:
      - server
    
    environment:
      VITE_API_URL: http://localhost:5000
      DOCKER_ENV: "true"
    
    ports:
      - "5173:5173"
    
    # Mount source code for development (hot reload)
    volumes:
      - ./client/src:/app/src
      - ./client/index.html:/app/index.html
      - ./client/vite.config.ts:/app/vite.config.ts
      - ./client/tailwind.config.js:/app/tailwind.config.js
      - ./client/postcss.config.js:/app/postcss.config.js
      - ./client/package.json:/app/package.json
    
    networks:
      - todo-network

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

# Network for inter-container communication
networks:
  todo-network:
    driver: bridge


